// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(RegistroAccesoContext))]
    [Migration("20250903191429_SubidaDB")]
    partial class SubidaDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Acceso", b =>
                {
                    b.Property<int>("IdAcceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAcceso"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<string>("ResultadoAcceso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoAcceso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("longtext");

                    b.HasKey("IdAcceso");

                    b.HasIndex("IdAlumno");

                    b.ToTable("Accesos");

                    b.HasData(
                        new
                        {
                            IdAcceso = 1,
                            FechaHora = new DateTime(2025, 9, 3, 16, 14, 28, 393, DateTimeKind.Local).AddTicks(1317),
                            IdAlumno = 1,
                            ResultadoAcceso = "Permitido",
                            TipoAcceso = "Entrada",
                            Ubicacion = "Puerta Principal"
                        },
                        new
                        {
                            IdAcceso = 2,
                            FechaHora = new DateTime(2025, 9, 3, 15, 44, 28, 393, DateTimeKind.Local).AddTicks(1320),
                            IdAlumno = 2,
                            ResultadoAcceso = "Fallo",
                            TipoAcceso = "Salida",
                            Ubicacion = "Puerta Lateral"
                        },
                        new
                        {
                            IdAcceso = 3,
                            FechaHora = new DateTime(2025, 9, 3, 15, 14, 28, 393, DateTimeKind.Local).AddTicks(1325),
                            IdAlumno = 3,
                            ResultadoAcceso = "NoReconocido",
                            TipoAcceso = "Entrada",
                            Ubicacion = "Puerta Trasera"
                        });
                });

            modelBuilder.Entity("Service.Models.Alumno", b =>
                {
                    b.Property<int>("IdAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAlumno"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoAlumno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("IdAlumno");

                    b.ToTable("Alumnos");

                    b.HasData(
                        new
                        {
                            IdAlumno = 1,
                            Apellido = "Pérez",
                            Dni = "12345678",
                            EstadoAlumno = "Activo",
                            Nombre = "Juan"
                        },
                        new
                        {
                            IdAlumno = 2,
                            Apellido = "García",
                            Dni = "87654321",
                            EstadoAlumno = "Egresado",
                            Nombre = "Ana"
                        },
                        new
                        {
                            IdAlumno = 3,
                            Apellido = "Martínez",
                            Dni = "11223344",
                            EstadoAlumno = "Suspendido",
                            Nombre = "Luis"
                        });
                });

            modelBuilder.Entity("Service.Models.Huella", b =>
                {
                    b.Property<int>("IdHuella")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHuella"));

                    b.Property<string>("EstadoHuella")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<byte[]>("TemplateHuella")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("IdHuella");

                    b.HasIndex("IdAlumno");

                    b.ToTable("Huellas");

                    b.HasData(
                        new
                        {
                            IdHuella = 1,
                            EstadoHuella = "Activo",
                            FechaRegistro = new DateTime(2025, 9, 3, 16, 14, 28, 393, DateTimeKind.Local).AddTicks(1255),
                            IdAlumno = 1,
                            TemplateHuella = new byte[] { 1, 2, 3 }
                        },
                        new
                        {
                            IdHuella = 2,
                            EstadoHuella = "Inactivo",
                            FechaRegistro = new DateTime(2025, 9, 3, 16, 14, 28, 393, DateTimeKind.Local).AddTicks(1287),
                            IdAlumno = 2,
                            TemplateHuella = new byte[] { 4, 5, 6 }
                        },
                        new
                        {
                            IdHuella = 3,
                            EstadoHuella = "Activo",
                            FechaRegistro = new DateTime(2025, 9, 3, 16, 14, 28, 393, DateTimeKind.Local).AddTicks(1291),
                            IdAlumno = 3,
                            TemplateHuella = new byte[] { 7, 8, 9 }
                        });
                });

            modelBuilder.Entity("Service.Models.Acceso", b =>
                {
                    b.HasOne("Service.Models.Alumno", "Alumno")
                        .WithMany("Accesos")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");
                });

            modelBuilder.Entity("Service.Models.Huella", b =>
                {
                    b.HasOne("Service.Models.Alumno", "Alumno")
                        .WithMany("Huellas")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");
                });

            modelBuilder.Entity("Service.Models.Alumno", b =>
                {
                    b.Navigation("Accesos");

                    b.Navigation("Huellas");
                });
#pragma warning restore 612, 618
        }
    }
}
